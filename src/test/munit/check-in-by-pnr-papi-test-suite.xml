<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="check-in-by-pnr-papi-test-suite.xml" />
	<sub-flow name="verify-call-mocks-are-called-once" doc:id="31248d5c-813d-4ef9-8de1-1ffe8143ed21" >
		<munit-tools:verify-call doc:name="Verify call to flights-management-sapi" doc:id="b02ab6c9-e40b-4f93-ab02-704db76aa7fb" processor="flow-ref" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="flights-management-sapi" attributeName="name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		<munit-tools:verify-call doc:name="Verify call to register-passenger-data-sapi" doc:id="3fffff21-452d-4e42-b76a-76f5bda7128c" processor="flow-ref" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="register-passenger-data-sapi" attributeName="name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		<munit-tools:verify-call doc:name="Verify call create-payment-forbags-sapi" doc:id="5aa2d1bf-27c0-4337-be51-3de859ea455b" processor="flow-ref" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="create-payment-forbags-sapi" attributeName="name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
	</sub-flow>
	<munit:test name="check-in-by-pnr-papi-test-suiteTest" doc:id="efdff7ba-6843-4ab3-8b36-d1d29ff22628" expectedErrorType="PAYMENT_APP:CANT_CREATE_PAYMENT">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="a5b435b3-99c7-4ba7-80b6-53341ef3d7d5" processor="create-payment-forbags-sapi">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="create-payment-forbags-sapi" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="PAYMENT_APP:CANT_CREATE_PAYMENT" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="check-in-by-pnr-papi" doc:id="c424fb17-55c0-4684-a596-c4e94f91e4bb" name="set-check-in-event"/>
			<flow-ref doc:name="check-in-by-pnr-papi" doc:id="ec2fee34-dc3f-440a-95b0-21b0b37a04c7" name="check-in-by-pnr-papi"/>
		</munit:execution>
	</munit:test>
	<sub-flow name="set-check-in-event" doc:id="2f202ab1-c45d-40be-90b8-f44c46ddc9ca" >
		<munit:set-event doc:name="Set Event's payload and uriParam" doc:id="49f14597-22b1-479d-a1c6-c0b7ec61da4f">
				<munit:payload value="#[import * from testData --- checkIn]" />
			<munit:attributes value="#[{      uriParams:       {    PNR:   'P1234'         }             }]" />
			</munit:set-event>
	</sub-flow>
	<sub-flow name="spy-all-mocks" doc:id="733301d0-da80-4405-a567-c83b252b22ca" >
		<munit-tools:spy doc:name="Spy FlowRef create-payment-forbags-sapi" doc:id="3ef23e03-35c8-46c6-af4f-8d405fd1f724" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="create-payment-forbags-sapi" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:before-call>
					<munit-tools:assert-that doc:name="Assert that: PNR = P1234" doc:id="91ad9d10-9167-4759-aa00-ad2604618cab" is="#[MunitTools::equalTo('P1234')]" message="#['FAILED: Expected PNR to be P1234, but found $(vars.PNR) instead']" expression="#[vars.PNR]" />
					<munit-tools:assert-equals doc:name="Assert checkIn = incoming payload" doc:id="52a41184-1af0-414a-80f1-39d48f1dfab3" actual="#[vars.checkIn]" expected="#[import * from testData --- checkIn]" message="#['SPY BEFORE FAILED: Expected payload before making a call to create-payment-for-bags']" />
				</munit-tools:before-call>
				<munit-tools:after-call>
					<munit-tools:assert-that doc:name="Assert that status = PAID" doc:id="df7916d5-cdd0-450b-9dd5-1a0c6b6512d7" message="#['FAILED: Expected status to be PAID but found $(payload.status)']" expression="#[payload.status]" is="#[MunitTools::equalTo('PAID')]" />
				</munit-tools:after-call>
			</munit-tools:spy>
	</sub-flow>
	<sub-flow name="setup-api-mocks" doc:id="a20e6973-9052-4146-a7d9-52ef11aa5813" >
		<munit-tools:mock-when doc:name="Mock FlowRef flights-management-sapi" doc:id="ef6caf46-6a3d-4231-a84e-dd9bcc96f8ca" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="flights-management-sapi" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[{}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock FlowRef register-passenger-data-sapi" doc:id="8361530a-d04e-41e9-8908-e74b5b2f0054" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="register-passenger-data-sapi" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[{}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock HttpReq in create-payment-forbags-sapi" doc:id="b4633e20-c3d0-42f6-bfcc-0359e143afcf" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="http://220.102.99.75:8899/payment" attributeName="url" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[{}]" />
					<munit-tools:attributes value="#[{        httpStatus: 200      }]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
	</sub-flow>
	<munit:test name="check-in-by-pnr-papi-happy-path-test" doc:id="8ddbae31-93a7-430d-a879-82b5e7c37a0f" description="This testcase calls check-in-by-pnr-papi flow to test various validations">
		<munit:behavior>
			<flow-ref doc:name="spy-all-mocks" doc:id="068f3c7f-605a-4cfb-803c-139fe6611f3a" name="setup-api-mocks" />
			<flow-ref doc:name="spy-all-mocks" doc:id="da0cca71-3ddb-4bff-9314-d910bda21bdd" name="spy-all-mocks" />
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="set-check-in-event" doc:id="3ebf7dc9-39d2-40ab-a189-bcbe88d3d657" name="set-check-in-event" />
			<flow-ref doc:name="check-in-by-pnr-papi" doc:id="55542ee5-71cf-4305-b743-fbd59d3ee6af" name="check-in-by-pnr-papi" />
		</munit:execution>
		<munit:validation>
			<flow-ref doc:name="verify-call-mocks-are-called-once" doc:id="6acf92ba-8a7e-47ed-ab02-c5cb920b0537" name="verify-call-mocks-are-called-once" />
			<munit-tools:assert-that doc:name="Assert that" doc:id="9fcd0ba8-1b02-460f-83c3-3706245fbc8b" expression="#[payload]" is="#[import * from testData --- MunitTools::equalTo(paymentId)]" message="#['FAILED: Expected payment ID to be PAY-1AKD7482FAB9STATKO, but found $(payload.paymentID) instead']" />
		</munit:validation>
	</munit:test>


</mule>
